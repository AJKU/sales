@using Frapid.ApplicationState.Cache
@model dynamic

@{
    ViewBag.Title = "Sales Entries";
    Layout = ViewBag.SalesLayoutPath;
    var meta = AppUsers.GetCurrent();
}
<style>
    html, body {
        font-smooth: always;
    }

    @@media screen and (min-width: 1200px) {
        #pos-container {
            font-size: 9px!important;
        }
    }

    @@media screen and (min-width: 1300px) {
        #pos-container {
            font-size: 10px!important;
        }
    }

    @@media screen and (min-width: 1400px) {
        #pos-container {
            font-size: 11px!important;
        }
    }

    .sales.layout, #pos-container {
        height: 100%;
    }

        #pos-container .dimmer {
            font-weight: lighter;
            letter-spacing: 1px;
            font-size: 1.5em;
            text-transform: uppercase;
            position: relative;
            top: 50%;
            -webkit-transform: translateY(-50%);
            -ms-transform: translateY(-50%);
            transform: translateY(-50%);
            text-align: center;
        }

            #pos-container .dimmer div.spinner {
                padding: 0.5em;
            }

    #dashboard-container {
        padding: 0 !important;
    }

    #TenderInputText, #ChangeInputText {
        color: yellow !important;
        font-size: 1.5em;
    }

    iframe {
        background-color: white;
        width: 100%;
        height: 500px;
        border: none;
        display: none;
    }

    .modal {
        height: 100%;
    }


        .modal iframe {
            height: 1000px;
            display: block;
        }

    .inverted.header, .inverted.form {
        background: transparent !important;
    }

    input.invoice.number.for.reprint {
        background: transparent !important;
        border: 1px solid #555 !important;
        color: #eee !important;
    }

    .inverted.info.message {
        background-color: #B3A12E !important;
        border: 1px solid #B3A12E !important;
        color: #fff !important;
    }

    .info {
        padding: 0.25em 0.5em;
        display: inline-block;
        margin: 1px;
        -ms-border-radius: 4px;
        border-radius: 4px;
        font-weight: bold;
        text-transform: uppercase;
        font-size: 0.92em;
    }

    .office.info {
        background-color: #D65302;
    }

    .user.info {
        background-color: #68A800;
    }

    .area.info {
        background-color: #02B3D6;
    }

    .counter.info {
        background-color: #AC02D6;
    }



    .status.head {
        background-color: #444;
        padding: 1em;
        cursor: pointer;
    }

    .inline.blocks > .item {
        display: inline-block !important;
        padding: 2px;
        width: 200px;
    }

    .two.inline.blocks > .item {
        width: 50% !important;
    }

    .three.inline.blocks > .item {
        width: 33% !important;
    }

    .four.inline.blocks > .item {
        width: 25% !important;
    }

    .status.head .left {
        display: inline-block;
        width: 50%;
    }

    .status.head .right {
        display: inline-block;
        text-align: right;
        width: 50%;
    }

    .item.list {
        background-color: #333;
        cursor: pointer;
        text-align: center;
    }

        .item.list .item {
            display: inline-flex;
            background: linear-gradient(to top, #222, #575553);
            margin: 4px;
            height: 280px;
            padding: 0.5em;
            width: 200px;
            cursor: pointer;
        }

            .item.list .item:hover {
                background: linear-gradient(to top, #575553, #222);
            }

            .item.list .item .info {
                overflow: hidden;
            }

            .item.list .item .photo {
                position: relative;
                top: -16px;
                left: -2px;
                width: 200px;
                height: 280px;
            }


            .item.list .item:hover img {
                filter: grayscale(0%) !important;
                transition: opacity 1s ease-in-out;
            }


            .item.list .item .info .photo img {
                height: 300px;
                filter: grayscale(50%);
            }

            .item.list .item .info .name {
                font-size: 1.4em;
                font-weight: 100;
                position: relative;
                z-index: 1;
                top: -6.5em;
                line-height: 1.2em;
                text-align: center;
                text-shadow: 2px 2px 5px black;
            }

            .item.list .item .info .price {
                font-size: 3em;
                font-weight: 100 !important;
                text-align: right;
                position: relative;
                z-index: 1;
                top: 0.7em;
                text-shadow: -2px 3px 10px #000;
                color: #eee;
            }


    .category.list {
        padding: 4px;
        text-align: center;
        background-color: #555;
    }

        .category.list .filter {
            text-align: right;
            display: inline-block;
        }

        .category.list .category, .cat.filter {
            display: inline-block;
            background-color: #555;
            color: white;
            padding: 4px 12px;
            margin: 2px;
            border-radius: 12px;
            text-transform: uppercase;
            font-size: 0.9em;
            letter-spacing: 1px;
            cursor: pointer;
            text-shadow: 0 0 2px white;
        }

        .category.list .cat.filter {
            background-color: #444;
        }

        .category.list .category.selected, .category.list .category:hover {
            background-color: #78AD05;
        }

        .category.list .cat.filter:hover {
            background-color: #FA6400 !important;
        }

    .search.panel {
        background-color: #666;
        padding: 1em;
        text-align: center;
    }

        .search.panel input {
            text-align: center;
            font-size: 1.1em;
            background-color: transparent;
            border: 1px solid #999;
            border-radius: 2em;
            text-transform: uppercase;
            height: 2em;
            width: 20em;
        }


    .sales.items .item {
        background-color: #333;
        padding: 3px 9px;
        border-bottom: 1px dotted #444;
        cursor: pointer;
        -webkit-user-select: none; /* webkit (safari, chrome) browsers */
        -moz-user-select: none; /* mozilla browsers */
        -khtml-user-select: none; /* webkit (konqueror) browsers */
        -ms-user-select: none; /* IE10+ */
    }

        .sales.items .item:nth-child(even) {
            background-color: #373737 !important;
        }

        .sales.items .item:hover {
            background-color: #3a3a3a !important;
        }

        .sales.items .item .block {
            display: inline-block;
            height: 112px;
            overflow: hidden;
        }

            .sales.items .item .block img {
                height: 112px;
            }

        .sales.items .item .photo.block {
            width: 90px;
            overflow: hidden;
        }

        .sales.items .item .number.block {
            width: 120px;
        }


            .sales.items .item .number.block button {
                height: 100%;
                text-transform: uppercase;
                letter-spacing: 1px;
                font-weight: 100;
            }

        .sales.items .item input {
            font-size: 1.3em;
            margin: 0 0 0.3em 0;
            background-color: #333;
            border: 1px solid #555;
            width: 100%;
            padding: 4px 16px;
            text-align: right;
            border-radius: 0.5em;
        }

        .sales.items .item .info.block {
            width: calc(100% - 220px);
            padding: 1em;
        }

            .sales.items .item .info.block .price.info,
            .sales.items .item .info.block .discount.info,
            .sales.items .item .info.block .header {
                display: block;
            }

            .sales.items .item .info.block .header {
                font-size: 1.5em;
                font-weight: 100;
                text-transform: uppercase;
            }

            .sales.items .item .info.block .price.info {
                padding-top: 4px;
            }

            .sales.items .item .info.block .price.info,
            .sales.items .item .info.block .discount.info {
                font-size: 1.1em;
                text-align: left;
                padding: 0;
                text-transform: none;
                color: #fbd842;
            }


    .tender.info {
        background-color: #333;
        width: 100%;
        cursor: pointer;
        margin: 0 0 8px 0;
        padding: 6px 0;
    }


        .tender.info:hover {
            background-color: #3f3f3f;
        }


    .summary.items {
        padding: 0.5em 1em;
        display: flex;
    }

        .summary.items > .item {
            display: inline-flex;
            flex-direction: column;
            padding: 2px;
        }

    .three.summary.items > .item {
        width: 32%;
    }

    .two.summary.items > .item {
        width: 48%;
    }

    .one.summary.items > .item {
        width: 96%;
    }

    .summary.items > .item > .description {
        padding-bottom: 0.5em;
        font-size: 0.9em;
        text-align: left;
    }

    .summary.items > .item > .money {
        padding-top: 0.1em;
        font-size: 3em;
    }


    input.pan.number,
    input.customer.name,
    input.customer.address {
        font-size: 12px !important;
        padding: 8px !important;
    }

    .customer.name.item {
        width: 40% !important;
    }

    .customer.address.item {
        width: 30% !important;
    }

    .pan.number.item {
        width: 25% !important;
    }

    .inverted.dropdown,
    .inverted.dropdown input.search,
    .inverted.dropdown .menu,
    .inverted.dropdown .item,
    .inverted.dropdown .message {
        background-color: #555 !important;
        color: #eee !important;
        border: 1px solid #666 !important;
    }

        .inverted.dropdown .item.selected,
        .inverted.dropdown .item:hover {
            background-color: #666 !important;
        }

    .summary.items input,
    .summary.items select {
        background-color: #555 !important;
        color: #eee !important;
        border: 1px solid #666 !important;
        padding: .87em;
        border-radius: 0.4em;
        width: 100%;
        -moz-appearance: none; /* Firefox */
    }

    .summary.items .dropdown {
        padding: 1em !important;
    }

    select.inverted {
        background-color: #333;
        border: 1px solid #555;
        width: 100%;
        padding: 0.55em 1em;
        border-radius: 0.5em;
        -moz-appearance: none; /* Firefox */
    }

    #dashboard-container {
        padding: 0 !important;
    }

    #pos-container {
        background-color: #555;
    }


    .pos.tabs {
        display: flex;
        padding: 0;
    }


        .pos.tabs .item {
            display: inline-flex;
            flex-direction: column;
            background: #444;
            margin: 0 0.5em 0 0;
            font-weight: bold;
            font-size: 1.3em;
            padding: 0.75em 1em;
            border-radius: 0.5em 0.5em 0 0;
            cursor: pointer;
            text-shadow: 2px 2px 20px #222;
        }

            .pos.tabs .selected.item,
            .pos.tabs .active.item,
            .pos.tabs .item:hover {
                background: #C6A13D;
                color: #eee;
            }

    .circular.button {
        padding: 0.9em 2em !important;
    }

    #pos-items {
        background-color: #3a3a3a;
        height: 100%;
        padding: 1em;
    }

    .tabs .actions {
        background: #555;
        width: 100%;
        text-align: right;
        margin: 0 !important;
    }

        .tabs .actions .icon {
            cursor: pointer;
        }

    .ui.action.panel.inverted.segment {
        background: none !important;
    }

    .action.panel .toolbar {
        display: flex;
        background-color: #2f2f2f;
        background: linear-gradient(to top, #222, #444);
        text-align: right;
    }

        .action.panel .toolbar > .item {
            text-align: center;
            display: inline-flex;
            flex-direction: column-reverse;
            background: #3f3f3f;
            background: linear-gradient(to top, #222, #444); /* Standard syntax */
            padding: 1em 0.6em;
            border-right: 1px solid #333;
            height: 3em;
            width: 2.5em;
            font-size: 1.4em;
            cursor: pointer;
        }


            .action.panel .toolbar > .item:hover {
                background: #C4A03D;
                background: linear-gradient(to bottom, #C4A03D, #C4343D); /* Standard syntax */
            }

    .summary.items > .item > .description {
        text-transform: uppercase;
        font-weight: bold;
    }

    .header.items {
        background-color: #3f3f3f;
        background: linear-gradient(to top, #292929, #444); /* Standard syntax */
        padding: 1em 1em 1.5em;
    }



        .header.items .count.item,
        .header.items .count.item .description {
            text-align: right !important;
        }

            .header.items .count.item .money {
                color: #FBD840;
            }

    .footer.items {
        background-color: #3f3f3f;
        background: linear-gradient(to top, #292929, #3a3a3a); /* Standard syntax */
        padding: 1em;
        text-align: right;
    }

    .action.panel.segment {
        padding: 0;
        border: 0;
        margin: 0;
    }

    .payment.type.container {
        padding-bottom: 1em;
        border-bottom: 1px solid #444;
    }

    .show.anchor {
        padding: 1em;
        color: #C4A03D;
    }
</style>
<style>
    /*Semantic UI Override*/
    @@media only screen and (max-width: 500px) {
        .ui.buttons {
            display: block !important;
        }

            .ui.buttons .button {
                width: 100% !important;
                margin-bottom: 0.5em !important;
            }
    }
</style>
<script src="/Scripts/frapid/utilities/form.js"></script>

<div id="pos-container" class="ui attached pos sales inverted segment">
    <div class="dimmer">
        <div class="spinner">
            <i class="ui huge loading spinner icon"></i>
        </div>
        <div>
            We're loading things
        </div>
    </div>
    <div class="layout" style="display: none;">
        <div class="pos tabs">
            <div class="new item">+</div>
            <div id="tab-item-1" class="selected item">
                1
            </div>
            <div class="actions">
                <div class="remove">
                    <i class="delete icon"></i>
                </div>
            </div>
        </div>
        <div id="pos-items">
            <div class="ui stackable grid">
                <div class="eleven wide column">
                    <div class="status head">
                        <div class="left">
                            <span class="office info" title="Current Branch Office">
                                @meta.OfficeName
                            </span>
                            <span class="user info" title="You">
                                @meta.Name
                            </span>
                            <span class="area info" title="Current Area">
                                @meta.OfficeCode
                            </span>
                            <span class="office info" title="Office Name">
                                @meta.OfficeName
                            </span>
                        </div>

                        <div class="right">
                            <div class="inline blocks">
                                <div class="item">
                                    <select class="ui search inverted fluid dropdown" id="PriceTypeSelect"></select>
                                </div>
                                <div class="item">
                                    <select id="StoreSelect"></select>
                                </div>
                                <div class="item">
                                    <select id="CounterSelect"></select>
                                </div>
                            </div>
                        </div>

                    </div>



                    <div class="category list">
                        <div class="cat filter" style="display: none;">
                            Clear
                            <i class="delete icon"></i>
                        </div>
                    </div>
                    <div class="search panel">
                        <input type="search" placeholder="Search ..." />

                    </div>
                    <div class="item list" id="POSItemList">
                    </div>
                </div>
                <div class="five wide column">
                    <div class="ui action panel inverted segment">
                        <div class="toolbar">
                            <div class="toggle view item" title="Toggle View">
                                <i class="toggle off icon"></i>
                            </div>
                            <div class="item" data-payment-type="cash" title="Cash">
                                <i class="money icon"></i>
                            </div>
                            <div class="item" data-payment-type="credit" title="Credit">
                                <i class="tags icon"></i>
                            </div>
                            <div class="item" data-payment-type="check" title="Pay by Check">
                                <i class="newspaper icon"></i>
                            </div>
                            <div class="item" data-payment-type="gift-card" title="Pay by Gift Card">
                                <i class="gift icon"></i>
                            </div>
                            <div class="item" id="SearchCustomerAction" title="Search Customer">
                                <i class="search icon"></i>
                            </div>
                            <div class="item" title="Reprint Ticket">
                                <i class="print icon"></i>
                            </div>
                            <div class="item" title="Sign Out of POS">
                                <i class="sign out icon"></i>
                            </div>
                        </div>
                        <div class="action container">
                            <div class="header items">
                                <div class="two summary items">
                                    <div class="amount item">
                                        <div class="description">Amount</div>
                                        <div class="money">
                                            <span></span>
                                        </div>
                                    </div>
                                    <div class="count item">
                                        <div class="description">Count</div>
                                        <div class="money">

                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="tender info items">
                                <div class="payment type container">
                                    <div data-payment-type="cash" class="two summary items">
                                        <div class="tender item">
                                            <div class="description">Cash Tender</div>
                                            <div class="control">
                                                <input type="text" class="decimal" id="TenderInputText" />
                                            </div>
                                        </div>
                                        <div class="change item">
                                            <div class="description">Cash Change</div>
                                            <div class="control">
                                                <input class="decimal" type="text" readonly="readonly" id="ChangeInputText" />
                                            </div>
                                        </div>
                                    </div>
                                    <div data-payment-type="credit" style="display: none;" class="one summary items">
                                        <div class="gift-card number item">
                                            <div class="description">Payment Term</div>
                                            <div class="control">
                                                <select id="PaymentTermSelect"></select>
                                            </div>
                                        </div>
                                    </div>
                                    <div data-payment-type="check" style="display: none;">
                                        <div class="two summary items">
                                            <div class="check amount item">
                                                <div class="description">Check Amount</div>
                                                <div class="control">
                                                    <input class="decimal" type="text" id="CheckAmountInputText" />
                                                </div>
                                            </div>
                                            <div class="check bank name item">
                                                <div class="description">Bank Name</div>
                                                <div class="control">
                                                    <input type="text" id="BankNameInputText" />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="two summary items">
                                            <div class="check number item">
                                                <div class="description">Check Number</div>
                                                <div class="control">
                                                    <input type="text" id="CheckNumberInputText" />
                                                </div>
                                            </div>
                                            <div class="check date item">
                                                <div class="description">Check Date</div>
                                                <div class="control">
                                                    <input type="text" class="date" id="CheckDateInputText" />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div data-payment-type="gift-card" style="display: none;" class="two summary items">
                                        <div class="gift-card number item">
                                            <div class="description">Gift Card Number</div>
                                            <div class="control">
                                                <input type="text" id="GiftCardNumberInputText" />
                                            </div>
                                        </div>
                                        <div class="gift-card balance item">
                                            <div class="description">Gift Card Balance</div>
                                            <div class="control">
                                                <input class="decimal" type="text" readonly="readonly" id="GiftCardNumberBalanceInputText" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="one summary items">
                                    <div class="customer item">
                                        <div class="description">Customer</div>
                                        <div class="control">
                                            <select id="CustomerSelect"></select>
                                        </div>
                                    </div>
                                </div>
                                <div class="three summary items">
                                    <div class="coupon code item">
                                        <div class="description">Coupon Code</div>
                                        <div class="control">
                                            <input type="text" class="" id="CouponCodeInputText" />
                                        </div>
                                    </div>
                                    <div class="discount type item">
                                        <div class="description">Discount Type</div>
                                        <div class="control">
                                            <select id="DiscountTypeSelect">
                                                <option value="1">Rate</option>
                                                <option value="2">Amount</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="discount item">
                                        <div class="description">Discount</div>
                                        <div class="control">
                                            <input type="text" class="decimal" id="DiscountInputText" />
                                        </div>
                                    </div>
                                </div>
                                <div class="two summary items">
                                    <div class="value date item">
                                        <div class="description">Value Date</div>
                                        <div class="control">
                                            <input type="text" class="date" id="ValueDateInputText" />
                                        </div>
                                    </div>
                                    <div class="book date item">
                                        <div class="description">Book Date</div>
                                        <div class="control">
                                            <input type="text" class="date" id="BookDateInputText" />
                                        </div>
                                    </div>
                                </div>
                                <a class="show more anchor">Show More</a>
                                <div class="more" style="display: none;">
                                    <div class="one summary items">
                                        <div class="cost center item">
                                            <div class="description">Cost Center</div>
                                            <div class="control">
                                                <select id="CostCenterSelect"></select>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="one summary items">
                                        <div class="shipping company item">
                                            <div class="description">Shipper</div>
                                            <div class="control">
                                                <select id="ShipperSelect"></select>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="two summary items">
                                        <div class="reference number item">
                                            <div class="description">Ref#</div>
                                            <div class="control">
                                                <input type="text" id="ReferenceNumberInputText" />
                                            </div>
                                        </div>
                                        <div class="memo item">
                                            <div class="description">Memo</div>
                                            <div class="control">
                                                <input type="text" id="StatementReferenceInputText" />
                                            </div>
                                        </div>
                                    </div>
                                    <a class="show less anchor">Show Less</a>
                                </div>
                                <div class="ui one column padded grid">
                                    <div class="column">
                                        <button class="ui big green button" id="CheckoutButton">Checkout</button>
                                    </div>
                                </div>
                            </div>
                            <div id="SalesItems" class="sales items">
                            </div>
                            <div class="footer items" style="display: none;">
                                <div class="ui clear negative circular button" id="ClearScreenButton">
                                    Clear Screen
                                </div>
                                <div class="ui next positive circular button">Next</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="ui customer search fullscreen modal padded segment">
    <iframe src="/dashboard/sales/setup/customers/search"></iframe>
</div>

<script>
    $("#SearchCustomerAction").click(function () {
        $(".customer.search.modal").modal({ blurring: true }).modal("show");
    });

    function onCustomerSearchSelect(customerId) {
        if (customerId) {
            $(".customer.search.modal").modal("hide");
            alert("The customer id is --> " + customerId);

            $("#CustomerSelect").dropdown("set selected", customerId);
        };
    };
</script>
<script>
    var pageLoaded = false;

    function getModel() {
        function getDetails() {
            var items = $("#SalesItems .item");
            var model = [];

            $.each(items, function () {
                var el = $(this);
                var itemId = parseInt(el.attr("data-item-id"));
                var quantity = window.parseFloat2(el.find("input.quantity").val());
                var unitId = parseInt(el.find("select.unit").val());
                var price = window.parseFloat2(el.find("input.price").val() || 0);
                var discount = window.parseFloat2(el.find("input.discount").val() || 0);

                model.push({
                    StoreId: $("#StoreSelect").val(),
                    ItemId: itemId,
                    Quantity: quantity,
                    UnitId: unitId,
                    Price: price,
                    Discount: discount
                });
            });

            return model;
        };

        //Cash
        var tender = window.parseFloat2($("#TenderInputText").val());
        var change = window.parseFloat2($("#ChangeInputText").val());

        //Credit
        var counterId = parseInt($("#CounterSelect").val()) || null;
        var paymentTermId = parseInt($("#PaymentTermSelect").val()) || null;

        //Check
        var checkAmount = window.parseFloat2($("#CheckAmountInputText").val()) || null;
        var bankName = $("#BankNameInputText").val();
        var checkNumber = $("#CheckNumberInputText").val();
        var checkDate = $("#CheckDateInputText").datepicker("getDate");

        //Gift Card
        var giftCardNumber = $("#GiftCardNumberInputText").val();


        //Discount Coupon
        var couponCode = $("#CouponCodeInputText").val();

        //Discount
        var discountType = $("#DiscountTypeSelect").val();
        var discount = window.parseFloat2($("#DiscountInputText").val());

        var valueDate = $("#ValueDateInputText").datepicker("getDate");
        var bookDate = $("#BookDateInputText").datepicker("getDate");
        var costCenterId = parseInt($("#CostCenterSelect").val()) || null;
        var referenceNumber = $("#ReferenceNumberInputText").val();
        var statementReference = $("#StatementReferenceInputText").val();
        var customerId = parseInt($("#CustomerSelect").val()) || null;
        var priceTypeId = $("#PriceTypeSelect").val();
        var shipperId = $("#ShipperSelect").val();
        var storeId = $("#StoreSelect").val();
        var details = getDetails();
        var quotationId = parseInt(window.getQueryStringByName("QuotationId")) || null;
        var orderId = parseInt(window.getQueryStringByName("OrderId")) || null;

        return {
            Tender: tender,
            Change: change,
            PaymentTermId: paymentTermId,
            CheckAmount: checkAmount,
            CheckBankName: bankName,
            CheckNumber: checkNumber,
            CheckDate: checkDate,
            CounterId: counterId,
            GiftCardNumber: giftCardNumber,
            CouponCode: couponCode,
            DiscountType: discountType,
            IsFlatDiscount: discountType === 2,
            Discount: discount,
            ValueDate: valueDate,
            BookDate: bookDate,
            CostCenterId: costCenterId,
            ReferenceNumber: referenceNumber,
            StatementReference: statementReference,
            CustomerId: customerId,
            PriceTypeId: priceTypeId,
            ShipperId: shipperId,
            StoreId: storeId,
            Details: details,
            SalesQuotationId: quotationId,
            SalesOrderId: orderId
        };
    };

    function clearState() {
        $.each(localStorage, function (key) {
            if (key.substr(0, 6) === "posTab") {
                localStorage.removeItem(key);
            };
        });
    };

    clearState();

    function getSelectedTabId() {
        var id = parseInt($(".tabs .selected.item:not(.new)").html());
        return id;
    };

    function getLocalStorageKey(id) {
        return "posTab" + id;
    };

    function getModelById(id) {
        var key = getLocalStorageKey(id);
        var item = localStorage.getItem(key);

        if (item) {
            return JSON.parse(item);
        };

        return null;
    };

    function removeModelById(id) {
        var key = getLocalStorageKey(id);
        localStorage.removeItem(key);
    };

    function saveState() {
        var id = getSelectedTabId();

        if (!id) {
            window.displayMessage("Please select a tab");
            return;
        };

        var model = getModel();
        var key = getLocalStorageKey(id);
        localStorage.setItem(key, JSON.stringify(model));
    };


    function removeState() {
        var id = getSelectedTabId();

        if (id) {
            removeModelById(id);
        };
    };

    $(document).unbind("itemAdded").bind("itemAdded", function (e, tabId, itemId) {
        var model = getModelById(tabId);

        var item = window.Enumerable.From(model.Details).Where(function (x) { return x.ItemId.toString() === itemId.toString(); }).FirstOrDefault();


        if (!item) {
            return;
        };

        var el = $("#pos-" + itemId);
        var unitSelect = el.find("select.unit");

        if (unitSelect.length) {
            unitSelect.val(item.UnitId);
        };

        var quantityInput = el.find("input.quantity");

        if (quantityInput.length) {
            quantityInput.val(item.Quantity);
        };

        var priceInput = el.find("input.price");

        if (priceInput.length) {
            priceInput.val(item.Price);
        };

        var discountInput = el.find("input.discount");

        if (discountInput.length) {
            discountInput.val(item.Discount);
        };

        discountInput.trigger("keyup");

    });

    function loadModelById(id) {
        var model = getModelById(id);
        if (!model) {
            return;
        };

        clearScreen();


        $("#TenderInputText").val(model.Tender);
        $("#ChangeInputText").val(model.Change);
        $("#PaymentTermSelect").dropdown("set selected", model.PaymentTermId);
        $("#CounterSelect").dropdown("set selected", model.CounterId);

        $("#CheckAmountInputText").val(model.CheckAmount);
        $("#BankNameInputText").val(model.CheckBankName);
        $("#CheckNumberInputText").val(model.CheckNumber);
        $("#CheckDateInputText").datepicker("setDate", new Date(model.CheckDate));

        $("#GiftCardNumberInputText").val(model.GiftCardNumber);
        $("#CouponCodeInputText").val(model.CouponCode);
        $("#DiscountTypeSelect").dropdown("set selected", model.DiscountType);
        $("#DiscountInputText").val(model.Discount);

        $("#ValueDateInputText").datepicker("setDate", new Date(model.ValueDate));
        $("#BookDateInputText").datepicker("setDate", new Date(model.BookDate));
        $("#CostCenterSelect").dropdown("set selected", model.CostCenterId);
        $("#ReferenceNumberInputText").val(model.ReferenceNumber);
        $("#StatementReferenceInputText").val(model.StatementReference);
        $("#CustomerSelect").dropdown("set selected", model.CustomerId);
        $("#PriceTypeSelect").dropdown("set selected", model.PriceTypeId);
        $("#ShipperSelect").dropdown("set selected", model.ShipperId);
        $("#StoreSelect").dropdown("set selected", model.StoreId);




        $.each(model.Details, function () {
            var lineItem = this;

            var itemId = lineItem.ItemId;
            var selector = "#POSItemList .item[data-item-id=" + itemId + "]";
            $(selector).trigger("click");
        });
    };

    function loadState() {
        var id = getSelectedTabId();

        if (id) {
            loadModelById(id);
        };
    };



    $("#SalesItems .item")
        .on("contextmenu",
            function (e) {
                e.preventDefault();
                var el = $(this);
                var defaultMenu = el.find(".info.block, .number.block");
                var contextMenu = el.find(".context.menu");

                defaultMenu.toggle();
                contextMenu.toggle();
            });
</script>

<script>
    var itemTemplate = `<div class="item" id="pos-{ItemId}" data-cost-price="{CostPrice}" data-photo="{Photo}" data-unit-id="{UnitId}" data-valid-units="{ValidUnits}" data-brand="{BrandName}" data-item-group="{ItemGroupName}" data-item-name="{ItemName}" data-item-code="{ItemCode}" data-item-id="{ItemId}" data-price="{Price}">
	<div class="photo block">
		<img src="{Photo}">
	</div>
	<div class="info block">
		<div class="header">{ItemName}</div>
		<div class="price info">
			<span class="rate">{CostPrice}</span>
			<span>&nbsp; x&nbsp; </span>
			<span class="quantity">1</span>
			<span>&nbsp; =&nbsp; </span>
			<span class="amount"></span>
		</div>
		<div class="discount info" style="display:none;">
			<span>Less&nbsp; </span>
			<span class="discount rate"></span>
			<span>&nbsp; =&nbsp; </span>
			<span class="discounted amount"></span>
		</div>
		<div>
			<select class="unit inverted" data-item-id="{ItemId}">
			</select>
		</div>
	</div>
	<div class="number block">
		<input type="text" class="decimal price" title="Edit Price" value="{CostPrice}">
		<input type="text" class="decimal quantity" title="Enter Quantity" value="1">
		<input type="text" class="decimal discount" title="Enter Rate of Discount" value="">
		<button class="ui red fluid button" onclick="removeItem(this);" style="display:none;">Delete</button>
	</div>
</div>`
</script>

<script>
    var products = [];
    var metaUnits = [];

    function fetchUnits() {
        function request() {
            var url = "/api/forms/inventory/units/all";
            return window.getAjaxRequest(url);
        };

        var ajax = request();

        ajax.success(function (response) {
            window.metaUnits = response;
        });
    };

    function fetchProducts() {
        function request() {
            var url = "/dashboard/sales/tasks/items";
            return window.getAjaxRequest(url);
        };

        var ajax = request();

        ajax.success(function (response) {
            window.products = response;
            $(document).trigger("itemFetched");
        });
    };

    $(".search.panel input").keyup(function () {
        var el = $(this);
        var term = el.val();

        var categoryEl = $(".category.list .selected.category");
        var category = "";

        if (categoryEl.length) {
            category = categoryEl.text();
        };

        displayProducts(category, term);

        initializeClickAndAction();
    });

    $(".search.panel input").keydown(function (e) {
        if (e.keyCode === 13) {
            var item = $(".item.list .item:first");

            if (item.length) {
                item.trigger("click");
            };
        };
    });

    window.fetchUnits();
    window.fetchProducts();

    setTimeout(function () {
        window.fetchProducts();
    }, 120000);

    function removeItem(el) {
        var confirmed = confirm("Are you sure?");

        if (!confirmed) {
            return;
        };

        el = $(el);
        var container = el.parent().parent();
        container.remove();
        window.updateTotal();
    };

    $(document).on("itemFetched", function () {
        $("#POSDimmer").removeClass("active");
        displayProducts();
        displayCategories();
        initializeClickAndAction();
    });

    $(".toggle.view.item, .next.button").unbind("click").bind("click", function () {
        $(".tender.info.items").toggle();
        //$(".header.items").toggle();
        $(".footer.items").toggle();
        $(".sales.items").toggle();
    });

    function initializeClickAndAction() {
        $("#POSItemList .item").unbind("click").bind("click", function () {
            var el = $(this);
            $(".tender.info.items").hide();
            //$(".header.items").show();
            $(".footer.items").show();
            var costPrice = el.attr("data-cost-price");
            var photo = el.attr("data-photo");

            var barCode = el.attr("data-barcode");
            var brand = el.attr("data-brand");
            var unitId = el.attr("data-unit-id");
            var validUnits = el.attr("data-valid-units");
            var itemGroup = el.attr("data-item-group");
            var itemName = el.attr("data-item-name");
            var itemCode = el.attr("data-item-code");
            var itemId = el.attr("data-item-id");
            var price = window.parseFloat2(costPrice || 0);

            if (!price) {
                alert("Cannot add item because the price is zero.");
                return;
            };



            var targetEl = $("#SalesItems");
            var selector = "pos-" + itemId;
            var existingEl = $("#" + selector);

            if (existingEl.length) {
                var existingQuantitySpan = existingEl.find("span.quantity");
                var existingQuantityInput = existingEl.find("input.quantity");

                var quantity = window.parseFloat2(existingQuantitySpan.text() || 0);
                quantity++;

                existingQuantitySpan.text(quantity);
                existingQuantityInput.val(quantity).trigger("keyup");

                window.updateTotal();
                return;
            };

            var template = itemTemplate;

            template = template.replace(/{ItemId}/g, itemId);
            template = template.replace(/{CostPrice}/g, costPrice);
            template = template.replace(/{Photo}/g, photo);
            template = template.replace(/{BarCode}/g, barCode);
            template = template.replace(/{BrandName}/g, brand);
            template = template.replace(/{ItemGroupName}/g, itemGroup);
            template = template.replace(/{ItemName}/g, itemName);
            template = template.replace(/{ItemCode}/g, itemCode);
            template = template.replace(/{Price}/g, price);
            template = template.replace(/{UnitId}/g, unitId);
            template = template.replace(/{ValidUnits}/g, validUnits);

            var item = $(template);
            var quantityInput = item.find("input.quantity");
            var priceInput = item.find("input.price");
            var discountInput = item.find("input.discount");
            var unitSelect = item.find("select.unit");

            function loadUnits(el, defaultUnitId, validUnits) {
                el.html("");

                var units = window.Enumerable.From(window.metaUnits)
                    .Where(function (x) {
                        return validUnits.indexOf(x.unit_id.toString()) > -1;
                    }).ToArray();

                $.each(units, function () {
                    var unit = this;

                    var option = $("<option/ >");
                    option.attr("value", unit.unit_id);
                    option.html(unit.unit_name);

                    if (defaultUnitId === unit.unit_id) {
                        option.attr("selected", "");
                    };

                    option.appendTo(el);
                });

            };

            loadUnits(unitSelect, unitId, validUnits.split(','));

            function updateItemTotal(el) {
                var quantityEl = el.find("input.quantity");
                var discountEl = el.find("input.discount");

                var quantity = window.parseFloat2(quantityEl.val() || 0);
                var discountRate = window.parseFloat2(discountEl.val().replace("%", ""));
                var price = window.parseFloat2(el.find("input.price").val());

                var amount = (price * quantity).toFixed(2);
                var discountedAmount = ((price * quantity) * ((100 - discountRate) / 100)).toFixed(2);

                el.find("span.rate:not(.discount)").html(price);
                el.find("span.quantity").html(quantity);
                el.find("span.amount").html(amount);
                el.find("span.discount.rate").html("");
                el.find("span.discounted.amount").html("");

                if (discountRate) {
                    el.find(".discount.info").show();
                    el.find("span.discount.rate").html(discountEl.val().replace("%", "") + "%");
                    el.find("span.discounted.amount").html(discountedAmount);
                } else {
                    el.find(".discount.info").hide();
                }

                window.updateTotal();

            };

            quantityInput.on("keyup", function () {
                var el = $(this);
                var parentInfo = el.parent().parent();
                updateItemTotal(parentInfo);
            });

            discountInput.on("keyup", function () {
                var el = $(this);

                var rate = window.parseFloat2(el.val());
                if (rate > 100) {
                    el.val("100");
                    return;
                };

                var parentInfo = el.parent().parent();
                updateItemTotal(parentInfo);
            });

            priceInput.on("keyup", function () {
                var el = $(this);
                var parentInfo = el.parent().parent();
                updateItemTotal(parentInfo);
            });

            discountInput.on("blur", function () {
                var el = $(this);
                var value = el.val();

                if (!value) {
                    return;
                };

                if (value.substr(value.length - 1) === "%") {
                    return;
                };

                el.val(el.val() + "%");
                var parentInfo = el.parent().parent();
                updateItemTotal(parentInfo);
            });

            function getPrice(el) {
                function request(itemId, customerId, priceTypeId, unitId) {
                    var url = "/dashboard/sales/tasks/selling-price/{itemId}/{customerId}/{priceTypeId}/{unitId}";
                    url = url.replace("{itemId}", itemId);
                    url = url.replace("{customerId}", customerId);
                    url = url.replace("{priceTypeId}", priceTypeId);
                    url = url.replace("{unitId}", unitId);

                    return window.getAjaxRequest(url);
                };

                var itemId = el.attr("data-item-id");
                var customerId = parseInt($("#CustomerSelect").val()) || 0;
                var priceTypeId = parseInt($("#PriceTypeSelect").val()) || 0;
                var unitId = el.val();

                $(".action.panel.segment").addClass("loading");
                var ajax = request(itemId, customerId, priceTypeId, unitId);

                ajax.success(function (response) {
                    $(".action.panel.segment").removeClass("loading");
                    var priceInput = el.parent().parent().parent().find("input.price");
                    priceInput.val(response).trigger("keyup");
                });

                ajax.fail(function (xhr) {
                    $(".action.panel.segment").removeClass("loading");
                    console.log(window.getAjaxErrorMessage(xhr));
                });
            };

            unitSelect.on("change", function () {
                getPrice($(this));
            });

            item.on("contextmenu", function (e) {
                e.preventDefault();
                var el = $(this);
                var inputEl = el.find(".number.block input");
                var buttonEl = el.find(".number.block button");

                inputEl.toggle();
                buttonEl.toggle();
            });

            item.appendTo(targetEl);
            quantityInput.trigger("keyup");
            window.setNumberFormat();
            window.updateTotal();

            var tabId = getSelectedTabId();
            var triggerName = "itemAdded";

            $(document).trigger(triggerName, [tabId, itemId]);
        });
    };

    $("#ReceiptSummary div.tender .money input").keyup(function () {
        window.updateTotal();
    });

    $("#DiscountTypeSelect").change(function () {
        window.updateTotal();
    });

    $("#DiscountInputText").keyup(function () {
        window.updateTotal();
    });

    function updateTotal() {
        var candidates = $("#SalesItems div.item");
        var amountEl = $("div.amount .money");
        var countEl = $("div.count .money");
        var couponDiscountType = parseInt($("#DiscountTypeSelect").val());
        var couponDiscountRate = window.parseFloat2($("#DiscountInputText").val());
        var discount;


        var totalPrice = 0;
        var totalQuantity = 0;

        $.each(candidates, function () {
            var el = $(this);
            var quantityEl = el.find("input.quantity");
            var discountEl = el.find("input.discount");

            var quantity = window.parseFloat2(quantityEl.val() || 0);
            var discountRate = window.parseFloat2(discountEl.val().replace("%", ""));
            var price = window.parseFloat2(el.find("input.price").val());

            var amount = price * quantity;
            var discountedAmount = amount * ((100 - discountRate) / 100);

            totalPrice += (discountedAmount || amount);
            totalQuantity += quantity;
        });

        totalPrice = parseFloat(totalPrice.toFixed(2));

        if (couponDiscountType === 1 && couponDiscountRate > 0 && couponDiscountRate <= 100) {
            discount = totalPrice * (couponDiscountRate / 100);
            totalPrice = totalPrice - discount;
        } else if (couponDiscountType === 2 && couponDiscountRate > 0) {
            //Discount amount
            totalPrice = totalPrice - couponDiscountRate;
        };



        amountEl.html(totalPrice);
        countEl.html(totalQuantity);
    };

    function displayCategories() {
        var categories = window.Enumerable.From(products).Distinct(function (x) { return x.ItemGroupName }).Select(function (x) { return x.ItemGroupName }).ToArray();
        var targetEl = $(".cat.filter");
        $(".category.list").find(".category").remove();

        targetEl.unbind("click").bind("click", function () {
            displayProducts();
            $(".category").removeClass("selected");
            targetEl.hide();
            initializeClickAndAction();
        });

        $.each(categories, function () {
            var category = $("<div class='category' />");
            category.html(this);

            category.unbind("click").bind("click", function () {
                $(".search.panel input").val("");
                var el = $(this);
                var name = el.text();

                if (name) {
                    displayProducts(name);
                    $(".category").removeClass("selected");
                    el.addClass("selected");

                    targetEl.show();
                } else {
                    targetEl.hide();
                };

                initializeClickAndAction();
            });

            targetEl.before(category);
        });
    };

    function displayProducts(category, searchQuery) {
        var target = $("#POSItemList");

        var groupItems;

        if (!category && !searchQuery) {
            groupItems = products;
        } else {
            if (category && searchQuery) {
                groupItems = window.Enumerable
                    .From(products)
                    .Where(function (x) {
                        return x.ItemGroupName.toLowerCase() === category.toString().toLowerCase()
                            && x.ItemName.toLowerCase().indexOf(searchQuery.toLowerCase()) > -1;
                    }).ToArray();
            } else if (!category && searchQuery) {
                groupItems = window.Enumerable
                    .From(products)
                    .Where(function (x) {
                        return x.ItemName.toLowerCase().indexOf(searchQuery.toLowerCase()) > -1;
                    }).ToArray();
            } else {
                groupItems = window.Enumerable
                    .From(products)
                    .Where(function (x) {
                        return x.ItemGroupName.toLowerCase() === category.toString().toLowerCase();
                    }).ToArray();
            };
        };

        target.html("").hide();

        $.each(groupItems, function () {
            var product = this;

            var item = $("<div class='item' />");
            item.attr("data-item-id", product.ItemId);
            item.attr("data-item-code", product.ItemCode);
            item.attr("data-item-name", product.ItemName);
            item.attr("data-item-group", product.ItemGroupName);
            item.attr("data-brand", product.BrandName);
            item.attr("data-unit-id", product.UnitId);
            item.attr("data-valid-units", product.ValidUnits);
            item.attr("data-barcode", product.Barcode);
            item.attr("data-photo", product.Photo);
            item.attr("data-cost-price", product.CostPrice);

            if (product.HotItem) {
                item.addClass("hot");
            };

            var info = $("<div class='info' />");

            var price = $("<div class='price' />");
            price.html(product.CostPrice);

            price.appendTo(info);


            var photo = $("<div class='photo' />");
            var img = $("<img />");
            img.attr("src", product.Photo + "?Height=200&Width=200");

            img.appendTo(photo);
            photo.appendTo(info);

            var name = $("<div class='name' />");
            name.html(product.ItemName);

            name.appendTo(info);

            info.appendTo(item);
            item.appendTo(target);
        });

        if (searchQuery) {
            target.show();
            return;
        };

        target.fadeIn(500);
    };

</script>
<script>
    $("#TenderInputText").on("keyup", function () {
        var total = window.parseFloat2($(".amount.item .money").text());
        var tender = window.parseFloat2($(this).val());

        var change = tender - total;

        if (change < 0) {
            change = "ERROR";
        };

        $("#ChangeInputText").val(change);
    });

    $("#CheckoutButton").unbind("click").bind("click", function () {
        function request(model) {
            var url = "/dashboard/sales/tasks/entry/new";
            var data = JSON.stringify(model);
            return window.getAjaxRequest(url, "POST", data);
        };

        function validate() {
            var transactionTotal = window.parseFloat2($("div.amount .money").text());
            var cashTender = window.parseFloat2($("#TenderInputText").val());
            var paymentTerm = parseInt($("#PaymentTermSelect").val()) || null;
            var checkAmount = window.parseFloat2($("#CheckAmountInputText").val());
            var bankName = $("#BankNameInputText").val();
            var checkDate = $("#CheckDateInputText").datepicker("getDate");
            var checkNumber = $("#CheckNumberInputText").val();
            var giftCardNumber = $("#GiftCardNumberInputText").val();
            var giftCardBalance = $("#GiftCardNumberBalanceInputText").val();

            if (cashTender >= transactionTotal) {
                //Cash Transaction

                $("#CheckAmountInputText").val("");
                $("#BankNameInputText").val("");
                $("#CheckDateInputText").val("");
                $("#CheckNumberInputText").val("");
                $("#PaymentTermSelect").dropdown("set selected", "Select");
                $("#GiftCardNumberInputText").val("");
                $("#GiftCardNumberBalanceInputText").val("");
                return true;
            };

            if (checkAmount >= transactionTotal) {
                //Paid via Check/Cheque
                if (!bankName) {
                    window.displayMessage("Please enter the bank name.");
                    return false;
                };

                if (!checkNumber) {
                    window.displayMessage("Please enter the check number.");
                    return false;
                };

                if (!checkDate) {
                    window.displayMessage("Please enter the check date.");
                    return false;
                };

                $("#TenderInputText").val("");
                $("#ChangeInputText").val("");
                $("#PaymentTermSelect").dropdown("set selected", "Select");
                $("#GiftCardNumberInputText").val("");
                $("#GiftCardNumberBalanceInputText").val("");


                return true;
            };

            if (giftCardBalance >= transactionTotal) {
                //Paid via Gift Card

                if (!giftCardNumber) {
                    window.displayMessage("Please enter the gift card number.");
                    return false;
                };

                $("#TenderInputText").val("");
                $("#ChangeInputText").val("");
                $("#CheckAmountInputText").val("");
                $("#BankNameInputText").val("");
                $("#CheckDateInputText").val("");
                $("#CheckNumberInputText").val("");
                $("#PaymentTermSelect").dropdown("set selected", "Select");

                return true;
            };

            //Credit transaction
            $("#TenderInputText").val("");
            $("#ChangeInputText").val("");
            $("#CheckAmountInputText").val("");
            $("#BankNameInputText").val("");
            $("#CheckDateInputText").val("");
            $("#CheckNumberInputText").val("");
            $("#GiftCardNumberInputText").val("");
            $("#GiftCardNumberBalanceInputText").val("");

            if (!paymentTerm) {
                window.displayMessage("Please select a payment term.");
                return false;
            };

            return true;
        };

        var isValid = validate();

        if (!isValid) {
            return;
        };

        var model = getModel();

        if (!model.Details.length) {
            alert("Please select an item.");
            return;
        };

        var confirmed = confirm("Are you sure");

        if (!confirmed) {
            return;
        };


        $("#CheckoutButton").addClass("loading");

        var ajax = request(model);

        ajax.success(function (response) {
            var id = response;
            document.location = "/dashboard/sales/tasks/entry/checklist/" + id;
        });

        ajax.fail(function (xhr) {
            $("#CheckoutButton").removeClass("loading");
            alert(JSON.stringify(xhr));
        });
    });
</script>

<script>
    $("#ClearScreenButton")
        .unbind("click")
        .bind("click",
            function () {
                clearScreen();
            });

    function clearScreen() {
        $("#SalesItems").html("");
        window.updateTotal();
    };
</script>

<script>
    function loadStores() {
        window.displayFieldBinder($("#StoreSelect"), "/api/forms/inventory/stores/display-fields", true);
    };

    function loadPaymentTerms() {
        window.displayFieldBinder($("#PaymentTermSelect"), "/api/forms/sales/payment-terms/display-fields", false);
    };

    function loadShippers() {
        window.displayFieldBinder($("#ShipperSelect"), "/api/forms/inventory/shippers/display-fields", true);
    };

    function loadCostCenters() {
        window.displayFieldBinder($("#CostCenterSelect"), "/api/forms/finance/cost-centers/display-fields", true);
    };

    function loadPriceTypes() {
        window.displayFieldBinder($("#PriceTypeSelect"), "/api/forms/sales/price-types/display-fields", true);
    };

    function loadCustomers() {
        window.displayFieldBinder($("#CustomerSelect"), "/api/forms/inventory/customers/display-fields");
    };

    loadStores();
    loadPriceTypes();
    loadCustomers();
    loadCostCenters();
    loadShippers();
    loadPaymentTerms();

    $("#StoreSelect").change(function () {
        var el = $(this);

        function loadCounters() {
            var storeId = el.val();

            var filters = [];
            filters.push(window.getAjaxColumnFilter("WHERE", "store_id", "int", window.FilterConditions.IsEqualTo, storeId));

            window.displayFieldBinder($("#CounterSelect"), "/api/forms/inventory/counters/display-fields/get-where", true, filters);
        };

        loadCounters();
    });
</script>

<script>
    function initializeTabs() {
        $(".pos.tabs .item:not(.new)")
            .unbind("click")
            .bind("click",
                function () {
                    saveState();
                    $(".pos.tabs .item").removeClass("selected");
                    var el = $(this);
                    el.addClass("selected");
                    loadState();
                });
    };

    $(".tabs .new.item")
        .unbind("click")
        .bind("click",
            function () {
                var el = $(this);
                saveState();

                function createTab(id) {
                    var item = $("<div class='item' />");
                    item.attr("id", "tab-item-" + id);
                    item.html(id);

                    el.siblings(".actions").before(item);
                };

                var items = [];
                var candidates = $(".tabs .item:not(.new)");

                $.each(candidates,
                    function () {
                        var el = $(this);
                        var id = parseInt(el.text());
                        items.push(id);
                    });

                var max = window.Enumerable.From(items).Max(function (x) { return x; });
                var nextValue = 1;

                if (max) {
                    nextValue = max + 1;
                };

                createTab(nextValue);


                initializeTabs();
                $(".tabs .item").removeClass("selected");
                $("#tab-item-" + nextValue).addClass("selected");
                clearScreen();
            });

    $(".tabs .actions .delete.icon")
        .unbind("click")
        .bind("click",
            function () {
                var activeEl = $(".tabs .selected.item");
                var id = parseInt(activeEl.text());

                if (activeEl.length && id > 1) {
                    var confirmed = window.confirm("Are you sure you want to delete this tab?");

                    if (!confirmed) {
                        return;
                    };

                    removeState();

                    var previousEl = activeEl.prev(".item");
                    previousEl.addClass("selected");
                    activeEl.remove();
                    loadState();
                };
            });

    initializeTabs();

    $(".toolbar .item[data-payment-type]").unbind("click").bind("click", function () {
        var el = $(this);
        var paymentType = el.attr("data-payment-type");
        $(".payment.type.container [data-payment-type]").hide();
        $(".payment.type.container [data-payment-type=" + paymentType + "]").show();
    });

    $(".show.more.anchor").unbind("click").bind("click", function () {
        var more = $(".tender.info.items .more");

        more.show();
        $(this).hide();
    });

    $(".show.less.anchor").unbind("click").bind("click", function () {
        var more = $(".tender.info.items .more");

        more.hide();
        $(".show.more.anchor").show();
    });

    $(document).ajaxStop(function () {
        if (!pageLoaded) {
            $("#pos-container .dimmer").hide();
            $("#pos-container .layout").fadeIn(500);
        };

        pageLoaded = true;
    });


</script>

<script>
    setTimeout(function () {
        $(".decimal").number(true, window.currencyDecimalPlaces, ".", "");
    },
        100);

    $("select:not(.ui)").addClass("inverted fluid").dropdown();

    window.overridePath = "/dashboard/sales/tasks/entry";
</script>
